# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Test
      run: go test -v ./...
      
    - name: build
      run: |
        mkdir -p output
        GOOS=linux GOARCH=amd64 go build -ldflags="-X main.BuildTime=$(date -u +%Y-%m-%dT%H:%M:%SZ) -X main.Version=$(git rev-parse --short HEAD)" -o output/hls_linux_amd64 cmd/main.go
        GOOS=windows GOARCH=amd64 go build -ldflags="-X main.BuildTime=$(date -u +%Y-%m-%dT%H:%M:%SZ) -X main.Version=$(git rev-parse --short HEAD)" -o output/hls.exe  cmd/main.go
        GOOS=darwin GOARCH=amd64 go build -ldflags="-X main.BuildTime=$(date -u +%Y-%m-%dT%H:%M:%SZ) -X main.Version=$(git rev-parse --short HEAD)" -o output/hls_darwin cmd/main.go

